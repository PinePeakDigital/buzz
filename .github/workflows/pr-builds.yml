name: PR Builds

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod
          cache: true

      - name: Build cross-platform binaries
        run: ./scripts/build.sh

      - name: Create or update pre-release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: pr-${{ github.event.pull_request.number }}-latest
          name: "PR #${{ github.event.pull_request.number }} - Latest Build"
          body: |
            **Automated PR Build**
            
            - PR: #${{ github.event.pull_request.number }}
            - Commit: ${{ github.sha }}
            - Built: ${{ github.event.repository.updated_at }}
            
            This is a pre-release build for testing purposes. Install using the `bin` command - see PR comment for instructions.
          draft: false
          prerelease: true
          files: |
            buzz-linux-amd64
            buzz-linux-arm64
            buzz-darwin-amd64
            buzz-darwin-arm64
            buzz-windows-amd64.exe
            buzz-windows-arm64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Post PR comment with pre-release links
        uses: actions/github-script@v7
        with:
          script: |
            const repo = context.repo;
            const prNumber = context.issue.number;
            const tagName = `pr-${prNumber}-latest`;
            const releaseUrl = `https://github.com/${repo.owner}/${repo.repo}/releases/tag/${tagName}`;
            
            const comment = `## 🚀 Pre-release Build Ready
            
            Test builds are ready! Install directly using the \`bin\` command:
            
            \`\`\`bash
            # Install the pre-release
            bin install ${releaseUrl} buzz-pr-${prNumber}
            
            # Run the pre-release
            buzz-pr-${prNumber}
            
            # Uninstall the pre-release
            bin remove buzz-pr-${prNumber}
            \`\`\`
            
            ### Direct Download Links
            
            Or download binaries directly from the [pre-release page](${releaseUrl}):
            
            - [Linux AMD64](https://github.com/${repo.owner}/${repo.repo}/releases/download/${tagName}/buzz-linux-amd64)
            - [Linux ARM64](https://github.com/${repo.owner}/${repo.repo}/releases/download/${tagName}/buzz-linux-arm64)
            - [macOS Intel](https://github.com/${repo.owner}/${repo.repo}/releases/download/${tagName}/buzz-darwin-amd64)
            - [macOS Apple Silicon](https://github.com/${repo.owner}/${repo.repo}/releases/download/${tagName}/buzz-darwin-arm64)
            - [Windows AMD64](https://github.com/${repo.owner}/${repo.repo}/releases/download/${tagName}/buzz-windows-amd64.exe)
            - [Windows ARM64](https://github.com/${repo.owner}/${repo.repo}/releases/download/${tagName}/buzz-windows-arm64.exe)
            
            > 💡 No GitHub login required for downloads!
            > 
            > 🗑️ This pre-release will be automatically deleted when the PR is closed.`;
            
            // Check if we already posted a comment (with pagination)
            const comments = await github.paginate(github.rest.issues.listComments, {
              owner: repo.owner,
              repo: repo.repo,
              issue_number: prNumber,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('🚀 Pre-release Build Ready')
            );
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: repo.owner,
                repo: repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: repo.owner,
                repo: repo.repo,
                issue_number: prNumber,
                body: comment
              });
            }
